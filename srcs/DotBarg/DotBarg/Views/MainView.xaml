<Window x:Class="DotBarg.Views.MainView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:conv="clr-namespace:DotBarg.Converters"
        xmlns:b="clr-namespace:DotBarg.Behaviors"
        xmlns:v="clr-namespace:DotBarg.Views"
        xmlns:c="clr-namespace:DotBarg.Views.Controls"
        xmlns:vm="clr-namespace:DotBarg.ViewModels"
        xmlns:dock="http://schemas.xceed.com/wpf/xaml/avalondock"
        xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
        xmlns:l="http://schemas.livet-mvvm.net/2011/wpf"
        xmlns:e="http://schemas.livet-experimentals.jp/2018/wpf"
        e:ViewModelLocator.AutoWireViewModel="True"
        e:MessengerOperator.AutoReceiveOperation="True"
        mc:Ignorable="d"
        AllowDrop="True"
        ResizeMode="CanResizeWithGrip"
        Title="DotBarg" Height="600" Width="960">

    <!--
    この画面を開いた時に、以下のようなエラーが表示されたら、いったんリビルドしてみてください。
    
    型 'LayoutInsertTarget' の値は、型 'List' のコレクションまたは辞書に追加できません。
    型 'LayoutItemTypedStyle' の値は、型 'List' のコレクションまたは辞書に追加できません。
    型 'LayoutItemTypedStyle' の値は、型 'List' のコレクションまたは辞書に追加できません。
    -->

    <Window.Resources>

        <conv:TreeNodeKindsToImageConverter x:Key="TreeNodeKindsToImageConverter" />
        <conv:TreeNodeKindsToStringConverter x:Key="TreeNodeKindsToStringConverter" />

    </Window.Resources>
    
    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Closed">
            <l:DataContextDisposeAction />
        </i:EventTrigger>
    </i:Interaction.Triggers>

    <i:Interaction.Behaviors>
        <b:WindowDragAndDropBehavior />
    </i:Interaction.Behaviors>

    <DockPanel>

        <!-- 画面上部、メニュー -->
        <Menu DockPanel.Dock="Top">
            <MenuItem Header="ファイル(_F)">

                <MenuItem Header="ソリューションファイルの選択...(_O)">

                    <MenuItem.Icon>
                        <Image Source="/images/Solution.png" Width="16" Height="16" Stretch="Uniform" />
                    </MenuItem.Icon>

                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="Click">
                            <l:OpenFileDialogInteractionMessageAction>
                                <l:DirectInteractionMessage CallbackMethodTarget="{Binding}" CallbackMethodName="OpenFileDialogCallback">
                                    <l:OpeningFileSelectionMessage Filter="ソリューション ファイル(*.sln)|*.sln" Title="ソリューションファイルの選択" />
                                </l:DirectInteractionMessage>
                            </l:OpenFileDialogInteractionMessageAction>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>

                </MenuItem>

                <Separator />

                <MenuItem Header="終了(_X)">

                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="Click">
                            <l:WindowInteractionMessageAction>
                                <l:DirectInteractionMessage>
                                    <l:WindowActionMessage Action="Close" />
                                </l:DirectInteractionMessage>
                            </l:WindowInteractionMessageAction>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>

                </MenuItem>
            </MenuItem>

        </Menu>

        <ToolBarTray DockPanel.Dock="Top">
            <ToolBar>

                <Button>

                    <StackPanel Orientation="Horizontal" Margin="4,2">
                        <Image Source="/images/Solution.png" VerticalAlignment="Center" />
                        <TextBlock Text="ソリューションファイルの選択..." VerticalAlignment="Center" Margin="5,0,0,0" />
                    </StackPanel>
                    
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="Click">
                            <l:OpenFileDialogInteractionMessageAction>
                                <l:DirectInteractionMessage CallbackMethodTarget="{Binding}" CallbackMethodName="OpenFileDialogCallback">
                                    <l:OpeningFileSelectionMessage Filter="ソリューション ファイル(*.sln)|*.sln" Title="ソリューションファイルの選択" />
                                </l:DirectInteractionMessage>
                            </l:OpenFileDialogInteractionMessageAction>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>

                </Button>

                <Separator />

                <TextBlock Text="AvalonDock のテーマ切り替え:" VerticalAlignment="Center" Margin="0, 0, 5, 0" />

                <ComboBox Name="_themeCombo" Width="120">
                    
                    <ComboBoxItem Content="通常" IsSelected="True" />
                    
                    <ComboBoxItem Content="Aero">
                        <ComboBoxItem.Tag>
                            <dock:AeroTheme />
                        </ComboBoxItem.Tag>
                    </ComboBoxItem>
                    
                    <ComboBoxItem Content="VS2010">
                        <ComboBoxItem.Tag>
                            <dock:VS2010Theme />
                        </ComboBoxItem.Tag>
                    </ComboBoxItem>

                    <ComboBoxItem Content="Metro">
                        <ComboBoxItem.Tag>
                            <dock:MetroTheme />
                        </ComboBoxItem.Tag>
                    </ComboBoxItem>

                </ComboBox>

                <TextBlock Text="主要フォントサイズ:" VerticalAlignment="Center" Margin="10, 0, 5, 0" />

                <ComboBox Name="_FontSizeCombo" Width="80">

                    <ComboBoxItem Content="8" />
                    <ComboBoxItem Content="9" />
                    <ComboBoxItem Content="10" />
                    <ComboBoxItem Content="11" />
                    <ComboBoxItem Content="12" />
                    <ComboBoxItem Content="14" />
                    <ComboBoxItem Content="16" />
                    <ComboBoxItem Content="18" IsSelected="True" />
                    <ComboBoxItem Content="20" />
                    <ComboBoxItem Content="22" />
                    <ComboBoxItem Content="24" />
                    <ComboBoxItem Content="26" />
                    <ComboBoxItem Content="28" />
                    <ComboBoxItem Content="36" />
                    <ComboBoxItem Content="48" />
                    <ComboBoxItem Content="72" />

                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="SelectionChanged">
                            <l:LivetCallMethodAction MethodTarget="{Binding}" MethodName="SetFontSize" MethodParameter="{Binding ElementName=_FontSizeCombo, Path=SelectedItem.Content}" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>

                </ComboBox>

            </ToolBar>
        </ToolBarTray>

        <StatusBar DockPanel.Dock="Bottom">
            <StatusBarItem>
                <TextBlock Text="{Binding StatusBarMessage, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
            </StatusBarItem>
        </StatusBar>

        <!-- 残り領域は AvalonDock -->
        <dock:DockingManager
            DocumentsSource="{Binding Documents}"
            AnchorablesSource="{Binding Anchorables}"
            Theme="{Binding ElementName=_themeCombo, Path=SelectedItem.Tag}">

            <!-- 初期レイアウト -->
            <dock:LayoutRoot>
                <dock:LayoutPanel Orientation="Horizontal">
                    <dock:LayoutAnchorablePane Name="SolutionExplorerPlace" DockWidth="300" />
                    <dock:LayoutDocumentPane />
                </dock:LayoutPanel>
            </dock:LayoutRoot>

            <!-- ViewModel.ContentId を元に、対応する View の配置先を指定する -->
            <dock:DockingManager.LayoutUpdateStrategy>
                <c:LayoutInitializer>
                    <c:LayoutInsertTarget ContentId="SolutionExplorer" TargetLayoutName="SolutionExplorerPlace" />
                </c:LayoutInitializer>
            </dock:DockingManager.LayoutUpdateStrategy>

            <!-- ViewModel に対応する View を指定する -->
            <dock:DockingManager.LayoutItemTemplateSelector>
                <c:LayoutItemTemplateSelector>

                    <DataTemplate DataType="{x:Type vm:SolutionExplorerViewModel}">
                        <v:SolutionExplorerView />
                    </DataTemplate>

                    <DataTemplate DataType="{x:Type vm:SourceViewModel}">
                        <v:SourceView />
                    </DataTemplate>

                    <DataTemplate DataType="{x:Type vm:ProjectReferenceViewModel}">
                        <v:ProjectReferenceView />
                    </DataTemplate>

                    <DataTemplate DataType="{x:Type vm:DefinitionDiscoveryViewModel}">
                        <v:DefinitionDiscoveryView />
                    </DataTemplate>

                </c:LayoutItemTemplateSelector>
            </dock:DockingManager.LayoutItemTemplateSelector>

            <!-- ペイン部分の表示データをバインド -->
            <dock:DockingManager.LayoutItemContainerStyleSelector>
                <c:LayoutItemContainerStyleSelector>

                    <c:LayoutItemTypedStyle DataType="{x:Type vm:AnchorablePaneViewModel}">
                        <Style TargetType="{x:Type dock:LayoutAnchorableItem}">
                            <Setter Property="Title" Value="{Binding Model.Title}" />
                            <Setter Property="CanHide" Value="{Binding Model.CanHide, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                            <Setter Property="CanClose" Value="{Binding Model.CanClose, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                            <Setter Property="CanFloat" Value="{Binding Model.CanFloat, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                            <Setter Property="IsActive" Value="{Binding Model.IsActive, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                            <Setter Property="IsSelected" Value="{Binding Model.IsSelected, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                            <Setter Property="ContentId" Value="{Binding Model.ContentId}" />
                        </Style>
                    </c:LayoutItemTypedStyle>

                    <c:LayoutItemTypedStyle DataType="{x:Type vm:DocumentPaneViewModel}">
                        <Style TargetType="{x:Type dock:LayoutItem}">
                            <Setter Property="Title" Value="{Binding Model.Title}" />
                            <Setter Property="CanClose" Value="{Binding Model.CanClose, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                            <Setter Property="CanFloat" Value="{Binding Model.CanFloat, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                            <Setter Property="IsActive" Value="{Binding Model.IsActive, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                            <Setter Property="IsSelected" Value="{Binding Model.IsSelected, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                            <Setter Property="ContentId" Value="{Binding Model.ContentId}" />
                            <Setter Property="IconSource" Value="{Binding Model.TreeNodeKinds, Converter={StaticResource TreeNodeKindsToImageConverter}}" />
                        </Style>
                    </c:LayoutItemTypedStyle>

                </c:LayoutItemContainerStyleSelector>
            </dock:DockingManager.LayoutItemContainerStyleSelector>

            <i:Interaction.Behaviors>
                <b:DocumentClosingBehavior DocumentClosingCommand="{Binding DocumentClosingCommand}" />
            </i:Interaction.Behaviors>

        </dock:DockingManager>
        
    </DockPanel>

</Window>
